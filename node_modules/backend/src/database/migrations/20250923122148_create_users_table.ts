import type { Knex } from "knex";

export async function up(knex: Knex): Promise<void> {
  return knex.schema.createTable('users', (table) => {
    // Clé primaire
    table.increments('id').primary();
    
    // Informations de base
    table.string('email').notNullable().unique();
    table.string('password').notNullable();
    table.string('firstName', 100).notNullable();
    table.string('lastName', 100).notNullable();
    table.date('dateOfBirth').nullable();
    table.enum('gender', ['male', 'female', 'other']).nullable();
    
    // Profil sportif
    table.enum('level', ['beginner', 'intermediate', 'advanced']).defaultTo('beginner');
    table.integer('height').nullable(); // en cm
    table.integer('weight').nullable(); // en kg
    
    // Objectifs (JSON pour flexibilité)
    table.json('goals').nullable(); // { strength: true, cardio: true, weightLoss: false, ... }
    
    // Blessures et limitations
    table.json('injuries').nullable(); // { knee: true, shoulder: false, back: true, ... }
    table.text('medicalNotes').nullable(); // Notes médicales libres
    
    // Matériel disponible
    table.json('equipment').nullable(); // { barbell: true, dumbells: true, pullUpBar: false, ... }
    
    // Préférences d'entraînement
    table.json('preferences').nullable(); // { duration: 45, intensity: 'high', workoutDays: ['monday', 'wednesday', 'friday'] }
    
    // Statut du compte
    table.boolean('isActive').defaultTo(true);
    table.boolean('emailVerified').defaultTo(false);
    table.timestamp('lastLoginAt').nullable();
    
    // Timestamps automatiques
    table.timestamps(true, true); // created_at, updated_at
    
    // Index pour optimisation
    table.index(['email']);
    table.index(['level']);
    table.index(['isActive']);
  });
}

export async function down(knex: Knex): Promise<void> {
  return knex.schema.dropTableIfExists('users');
}